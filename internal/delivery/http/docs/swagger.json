{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for using Swagger with Echo.",
        "title": "Swagger Todo App API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/todos": {
            "get": {
                "description": "Get todos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get todos",
                "operationId": "get-todos",
                "responses": {}
            },
            "post": {
                "description": "Add todo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add todo",
                "operationId": "add-todo",
                "parameters": [
                    {
                        "description": "Todo",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Todo"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/todos/{id}": {
            "get": {
                "description": "Get todo by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get todo by id",
                "operationId": "get-todo-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "description": "Update todo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update todo",
                "operationId": "update-todo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Todo",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Todo"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Delete todo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete todo",
                "operationId": "delete-todo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "entity.Priority": {
            "type": "integer",
            "enum": [
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "PriorityLow",
                "PriorityMedium",
                "PriorityHigh"
            ]
        },
        "entity.Todo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "is_done": {
                    "type": "boolean"
                },
                "priority": {
                    "$ref": "#/definitions/entity.Priority"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}